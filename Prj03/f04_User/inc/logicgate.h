// ===============================================================================
// Copyright (C) 2011-2012  All Rights Reserved
// 模块描述: 逻辑门宏定义
// 模块版本: V1.00
// 创建人员: GuXY
// 创建时间: 2011-10-12
// ===============================================================================
// 程序修改记录(最新的放在最前面):
// <版本号> <修改日期>, <修改人员>: <修改功能概述>
// ===============================================================================

#ifndef _LOGICGATE_H_
#define _LOGICGATE_H_

// ============================================================================
// 输入参数：布尔类型
// ============================================================================

// 两输入与门
#define AND2(a1,a2)           ((a1) && (a2))

// 两输入或门
#define OR2(a1,a2)            ((a1) || (a2))

// 非门
#define NOT(a1)               (!(a1))

// 三输入与门
#define AND3(a1,a2,a3)        ((a1) && (a2) && (a3))

// 四输入与门
#define AND4(a1,a2,a3,a4)     ((a1) && (a2) && (a3) && (a4))

// 五输入与门
#define AND5(a1,a2,a3,a4,a5)  ((a1) && (a2) && (a3) && (a4) && (a5))

// 六输入与门
#define AND6(a1,a2,a3,a4,a5,a6)  ((a1) && (a2) && (a3) && (a4) && (a5) && (a6))

// 三输入或门
#define OR3(a1,a2,a3)         ((a1) || (a2) || (a3))

// 四输入或门
#define OR4(a1,a2,a3,a4)      ((a1) || (a2) || (a3) || (a4))

// 五输入或门
#define OR5(a1,a2,a3,a4,a5)   ((a1) || (a2) || (a3) || (a4) || (a5))

// 六输入或门
#define OR6(a1,a2,a3,a4,a5,a6)   ((a1) || (a2) || (a3) || (a4) || (a5) || (a6))

// ============================================================================
// 宏功能：  大于
// 输入参数：任何类型
// 输出参数：布尔类型
// ============================================================================
#define  GT2( a, b )         ( ((a)>(b)) ? TRUE:FALSE )

// ============================================================================
// 宏功能：  大于等于
// 输入参数：任何类型
// 输出参数：布尔类型
// ============================================================================
#define  GE2( a, b )         ( ((a)>=(b)) ? TRUE:FALSE )

// ============================================================================
// 宏功能：  等于
// 输入参数：任何类型
// 输出参数：布尔类型
// ============================================================================
#define  EQU2( a, b )         ( ((a)==(b)) ? TRUE:FALSE )

// ============================================================================
// 宏功能：  不等于
// 输入参数：任何类型
// 输出参数：布尔类型
// ============================================================================
#define  NEQU2( a, b )         ( ((a)!=(b)) ? TRUE:FALSE )

// ============================================================================
// 宏功能：  小于
// 输入参数：任何类型
// 输出参数：布尔类型
// ============================================================================
#define  LT2( a, b )         ( ((a)<(b)) ? TRUE:FALSE )

// ============================================================================
// 宏功能：  小于等于
// 输入参数：任何类型
// 输出参数：布尔类型
// ============================================================================
#define  LE2( a, b )         ( ((a)<=(b)) ? TRUE:FALSE )

#define  TOBOOL( a )         ( (a) ? TRUE:FALSE )

#endif

